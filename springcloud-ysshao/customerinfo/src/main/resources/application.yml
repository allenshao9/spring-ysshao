server:
  port: 8081
spring:
  application:
    name: customerinfo
  datasource:
    username: czals757
    password: czals757
    url: jdbc:oracle:thin:@localhost:1521:orcl
    driver-class-name: oracle.jdbc.driver.OracleDriver
    #默认就是HikarCP连接池。 性能很好
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 150
      minimum-idle: 10
  jpa:
    hibernate:
      # 更新或者创建数据表结构
      ddl-auto: update
      naming:
        # 开启后JPA创建的表名 和 字段名 不带下划线。
        # SpringData JPA 使用的默认命名策略是： ImprovedNamingStrategy 。用下划线转换驼峰名
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    #控制台显示SQL
    show-sql: true

#Eureka client相关
eureka:
  #服务注册类配置
  client:
    #表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册消息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    #检索服务
    fetch-registry: true
    service-url:
      defaultZone: http://eureka01.com:9001/eureka,http://eureka02.com:9002/eureka
    #从Eureka服务器端获取注册信息的间隔时间 默认30
    registry-fetch-interval-seconds: 30

  #本身实例类配置
  instance:
    #微服务的服务显示名称
    instance-id: customerinfo
    #链接提示信息 显示IP
    prefer-ip-address: true
    #定义服务续约任务（心跳）的调用间隔 默认30s
    lease-renewal-interval-in-seconds: 30
    #定义服务失效的时间 默认90s
    lease-expiration-duration-in-seconds: 90

#actuator 监控相关
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: info,beans,env,mappings #开启那些监听
      base-path: /actuator  #访问监控的路径名
  endpoint:
    health:
      show-details: always

ribbon:
  #指的是建立连接所用的时间，适用于网络状况iE常的情况下两端连接所用的时间
  ReadTimeout: 5000
  #指的是建立连接后从服务器读取到可用资源所用的时间
  ConnectTimeout: 5000
  # 同一台实例的最大重试次数，但是不包括首次调用，默认为1次
  MaxAutoRetries: 1
  #//重试负载均衡其他实例的最大重试次数，不包括首次调用，默认为0次
  MaxAutoRetriesNextServer: 1
logging:
  level:
    #如何启用日志打印功能
    com.amarsoft.ysshao.customer.controller.CustomerController: debug

feign:
  hystrix:
    enabled: true
#设置超时时间  openfeign 调用其他服务时的连接超时时间 单位秒  上面的配置开启hystrix后，ribbon的超时配置就无效了
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000